apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 3306
  selector:
    app: {{ .Release.Name }}-mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels: 
      app: {{ .Release.Name }}-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
    spec:
      containers:
        - name: mysql
          image: {{ .Values.mysql_image | quote }}
          command:
            - "/docker-entrypoint.sh"
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_unicode_ci"
            - "--skip-character-set-client-handshake"
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql
                  key: root_password
            - name: MYSQL_DATABASE
              value: metabase
            - name: MYSQL_USER
              value: metabase
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql
                  key: password
          volumeMounts:
            - name: storage
              mountPath: /var/lib/mysql
            - name: config
              mountPath: "/etc/mysql/conf.d/my.cnf"
              subPath: my.cnf
              readOnly: true
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mysql
        - name: config
          configMap:
            name: {{ .Release.Name }}-mysql
