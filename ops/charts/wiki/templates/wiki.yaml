apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-wiki
spec:
  ports:
  - port: 80
  selector:
    app: {{ .Release.Name }}-wiki
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-wiki
spec:
  replicas: 2
  selector:
    matchLabels: 
      app: {{ .Release.Name }}-wiki
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-wiki
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      containers:
        - name: wiki
          imagePullPolicy: Always
          image: {{ .Values.image }}
          ports:
            - containerPort: 80
          env:
            - name: WIKI_DOMAIN
              value: {{ .Values.domain | quote }}
            - name: PARSOID_HOST
              value: {{ .Release.Name }}-parsoid
            - name: DB_HOST
              value: {{ .Release.Name }}-mysql
            - name: DB_NAME
              value: wiki
            - name: DB_USER
              value: wiki
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql
                  key: password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-settings
                  key: secret-key
            - name: SLACK_NOTIFICATIONS_WEBHOOK
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-settings
                  key: slack-notifications-webhook
            - name: GOOGLE_LOGIN_APP_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-settings
                  key: google-login-app-id
            - name: GOOGLE_LOGIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-settings
                  key: google-login-secret
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-settings
                  key: aws-access-key
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-settings
                  key: aws-secret-key
            - name: AWS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-settings
                  key: aws-bucket-name
        - name: memcached
          image: memcached
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
  - hosts:
    - {{ .Values.domain | quote }}
    secretName: {{ .Release.Name }}-wiki-tls
  rules:
  - host: {{ .Values.domain | quote }}
    http:
      paths:
      - backend:
          serviceName: {{ .Release.Name }}-wiki
          servicePort: 80
