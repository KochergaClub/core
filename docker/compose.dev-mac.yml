version: '3.4'

x-backend:
  &backend
  image: registry.gitlab.com/kocherga/core/backend:dev
  volumes:
    - code-py:/code/kocherga:nocopy
    - code-pytest:/code/tests:nocopy
    - data:/data:nocopy
  environment:
    DJANGO_SETTINGS_MODULE: 'kocherga.django.settings.dev'
    DB_NAME: 'kocherga'
    DB_USER: 'root'
    DB_PASSWORD: ''
    prometheus_multiproc_dir: /tmp # TODO - create empty tmpfs dir to avoid file name collisions etc.
    DJANGO_WATCHMAN_TIMEOUT: 60
  cap_add:
    - SYS_PTRACE

x-frontend:
  &frontend
  image: registry.gitlab.com/kocherga/core/frontend:dev
  volumes:
    - code-jsx:/code/jsx:nocopy
    - data:/data:nocopy
  environment:
    NODE_ENV: 'development'
  cap_add:
    - SYS_PTRACE

services:
  db:
    image: mariadb:10.3
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_DATABASE: kocherga
    volumes:
      - ../backend/data/db-volume:/var/lib/mysql
      - ../mysql.conf.d:/etc/mysql/conf.d

  chrome:
    image: registry.gitlab.com/kocherga/core/chrome:dev
    build:
      context: .
      dockerfile: ./Dockerfile.chrome
    cap_add:
      - SYS_ADMIN
    ports:
      - "127.0.0.1:9222:9222"
    privileged: true

  redis:
    image: redis:5.0
    ports:
      - "127.0.0.1:6379:6379"

  api:
    << : *backend
    build:
      context: ../backend
      dockerfile: ./Dockerfile
    command: ./manage.py runserver 0.0.0.0:80
    ports:
      - "127.0.0.1:8001:80"
    depends_on:
      - db
      - chrome
      - redis
    restart: always

  channels-worker:
    << : *backend
    command: ./scripts/channels-worker.sh
    depends_on:
      - db
      - redis
    restart: always

  render-server:
    << : *frontend
    build:
      context: ../frontend
      dockerfile: ./Dockerfile
      args:
        NPM_TOKEN: ${TOKEN}
    command: bash -c 'cd jsx && node ./render/server/index.js'
    depends_on:
      - api
    ports:
      - "127.0.0.1:8000:80"

volumes:
  code-jsx:
    external: true
  code-py:
    external: true
  code-pytest:
    external: true
  data:
    external: true
