version: '3.4'

x-environment: &environment
  DJANGO_SETTINGS_MODULE: 'kocherga.django.settings.prod'
  DB_NAME: 'kocherga_django' # TODO - environment-based databases
  DB_USER: 'kocherga'
  # these variables are passed from the outside (usually from gitlab secret variables, see .gitlab-ci config)
  DB_PASSWORD: "${DB_PASSWORD}"
  GOOGLE_ANALYTICS_ID: "${GOOGLE_ANALYTICS_ID}"
  FACEBOOK_PIXEL_ID: "${FACEBOOK_PIXEL_ID}"
  YANDEX_METRIKA_ID: "${YANDEX_METRIKA_ID}"
  VK_RETARGETING_ID: "${VK_RETARGETING_ID}"
  SENTRY_DSN_FRONTEND: "${SENTRY_DSN_FRONTEND}"
  NODE_ENV: 'production'
  prometheus_multiproc_dir: /tmp # TODO - create empty dir to avoid file name collisions etc.

x-backend: &backend
  image: registry.gitlab.com/kocherga/core/backend:${TAG}
  extra_hosts:
    - "db:${HOST_IP}"
  environment:
    <<: *environment
  volumes:
    - /config/secrets.py:/code/kocherga/django/settings/prod_secrets.py
    - /config/KKMServer.pem:/KKMServer.pem


x-frontend: &frontend
  image: registry.gitlab.com/kocherga/core/frontend:${TAG}
  environment:
    <<: *environment


services:
  chrome:
    image: registry.gitlab.com/kocherga/core/chrome:${TAG}
    cap_add:
      - SYS_ADMIN
#    volumes:
#      # Necessary for image uploads (which are passed by pyppeteer's uploadFile as file paths).
#      - /data/kocherga:/data
    privileged: true
    restart: always

  redis:
    image: redis:5.0

  api:
    << : *backend
    command: gunicorn -w 4 -t 180 -b 0.0.0.0:80 kocherga.django.wsgi
    ports:
      - "127.0.0.1:${API_PORT}:80"
    depends_on:
      - chrome
      - redis
      - tgbot
    restart: always

  api_async:
    << : *backend
    command: daphne --port 80 --bind 0.0.0.0 kocherga.django.asgi:application
    ports:
      - "127.0.0.1:${API_ASYNC_PORT}:80"
    depends_on:
      - chrome
      - redis
      - tgbot
    restart: always

  channels-worker:
    << : *backend
    command: ./scripts/channels-worker.sh
    depends_on:
      - redis
    restart: always

  tgbot:
    << : *backend
    command: ./scripts/tgbot.py
    restart: always

  ludwig:
    << : *backend
    command: ./scripts/ludwig.py
    ports:
      - "127.0.0.1:${LUDWIG_PORT}:80"
    restart: always

  importer:
    << : *backend
    command: ./scripts/importer.py
    environment:
      << : *environment
      NO_DJANGO_PROMETHEUS: 1
    ports:
      - "127.0.0.1:${IMPORTER_PORT}:8000" # for prometheus metrics
    restart: always

  worker:
    << : *backend
    command: ./scripts/worker.py
    restart: always

  render-server:
    << : *frontend
    command: node ./dist/index.js
    depends_on:
      - api
    ports:
      - "127.0.0.1:${RENDER_SERVER_PORT}:80"
    restart: always
