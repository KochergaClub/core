version: '3.4'

x-common:
  &common
  image: registry.gitlab.com/kocherga/core:${TAG}
  extra_hosts:
    - "db:${HOST_IP}"
  environment:
    DJANGO_SETTINGS_MODULE: 'kocherga.django.settings.prod'
    DB_NAME: 'kocherga_django' # TODO - environment-based databases
    DB_USER: 'kocherga'
    DB_PASSWORD: "${DB_PASSWORD}"
    # DB_PASSWORD is passed from the outside (usually from gitlab secret variables, see .gitlab-ci config)
  volumes:
    - /data/kocherga:/data
    - /data/kocherga-static:/code/collected_static
    - /config/secrets.py:/code/kocherga/django/settings/prod_secrets.py


services:
  chrome:
    image: registry.gitlab.com/kocherga/core/chrome:${TAG}
    cap_add:
      - SYS_ADMIN
    ports:
      - "127.0.0.1:9222:9222"
    volumes:
      # Necessary for image uploads (which are passed by pyppeteer's uploadFile as file paths).
      - /data/kocherga:/data
    privileged: true
    restart: always

  redis:
    image: redis:5.0
    ports:
      - "127.0.0.1:6379:6379"

  api:
    << : *common
    command: poetry run gunicorn -w 4 -t 180 -b 0.0.0.0:80 kocherga.django.wsgi
    ports:
      - "127.0.0.1:5302:80"
    depends_on:
      - chrome
      - redis
    restart: always

  api_async:
    << : *common
    command: poetry run daphne --port 80 --bind 0.0.0.0 kocherga.django.asgi:application
    ports:
      - "127.0.0.1:5301:80"
    depends_on:
      - render-server
      - chrome
      - redis
    restart: always

  channels-worker:
    << : *common
    command: ./scripts/channels-worker.sh
    depends_on:
      - redis
    restart: always

  render-server:
    << : *common
    command: /usr/bin/node ./static/dist/server.js
    depends_on:
      - api
    ports:
      - "127.0.0.1:5300:80"
    restart: always

  tgbot:
    << : *common
    command: poetry run ./scripts/tgbot.py
    restart: always

  ludwig:
    << : *common
    command: poetry run ./scripts/ludwig.py
    ports:
      - "127.0.0.1:5200:80"
    restart: always

  importer:
    << : *common
    command: poetry run ./scripts/importer.py
    restart: always

  worker:
    << : *common
    command: poetry run ./scripts/worker.py
    restart: always
