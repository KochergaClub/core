"""An enumeration."""
enum ActivityActivityType {
  """Секция"""
  SECTION

  """Перерыв"""
  BREAK

  """Бонус"""
  BONUS
}

type AuthCurrentUser {
  is_authenticated: Boolean!
  email: String
  is_staff: Boolean
  permissions: [String!]!
}

type AuthGroup {
  id: ID!
  name: String!
  permissions: [AuthPermission!]!
  users: [AuthUser!]!
}

type AuthPermission {
  id: ID!
  name: String!
  users: [AuthUser!]!
}

type AuthUser {
  id: ID!
  email: String!
  staff_member: StaffMember
}

input CashierCreatePaymentInput {
  amount: Int!
  whom: ID!
  comment: String!
}

type CashierPayment implements Node {
  """The ID of the object."""
  id: ID!
  whom: AuthUser!
  amount: Int!
  created_dt: DateTime!
  redeem_dt: DateTime
  comment: String!
  is_redeemed: Boolean!
}

type CashierPaymentConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [CashierPaymentEdge!]!
}

type CashierPaymentEdge {
  """The item at the end of the edge"""
  node: CashierPayment!

  """A cursor for use in pagination"""
  cursor: String!
}

input Cm2CreateCustomerInput {
  card_id: Int!
  first_name: String!
  last_name: String!
}

input Cm2CreateOrderInput {
  customer: ID
}

type Cm2Customer implements Node {
  """The ID of the object."""
  id: ID!
  card_id: Int!
  first_name: String!
  last_name: String!
  orders(before: String, after: String, first: Int, last: Int): Cm2OrderConnection!
}

type Cm2CustomerConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [Cm2CustomerEdge!]!
}

type Cm2CustomerEdge {
  """The item at the end of the edge"""
  node: Cm2Customer!

  """A cursor for use in pagination"""
  cursor: String!
}

type Cm2Order implements Node {
  """The ID of the object."""
  id: ID!
  start: DateTime!
  end: DateTime
  customer: Cm2Customer
  value: Int!
}

type Cm2OrderConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [Cm2OrderEdge!]!
}

type Cm2OrderEdge {
  """The item at the end of the edge"""
  node: Cm2Order!

  """A cursor for use in pagination"""
  cursor: String!
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

type ImageTemplate {
  name: ID!
  schema: ImageTemplateSchema!
  sizes: ImageTemplateSizes!
}

type ImageTemplateSchema {
  fields: [ImageTemplateSchemaField!]!
}

type ImageTemplateSchemaField {
  name: String!
  value_type: String!
  default: String
}

type ImageTemplateSizes {
  width: Int!
  height: Int!
}

"""An enumeration."""
enum MemberRole {
  """Основатель"""
  FOUNDER

  """Менеджер"""
  MANAGER

  """Видеоменеджер"""
  VIDEOMANAGER

  """Админ"""
  WATCHMAN

  """Тренер"""
  TRAINER

  """Внешний консультант"""
  CONSULTANT

  """Волонтёр"""
  VOLUNTEER
}

type Mutation {
  cm2CreateOrder(input: Cm2CreateOrderInput!): Cm2Order!
  cm2CreateCustomer(input: Cm2CreateCustomerInput!): Cm2Customer!
  cm2CloseOrder(id: ID!): Ok!
  ratioAddTraining(params: RatioAddTrainingInput!): RatioTraining!
  ratioAddTicket(input: RatioAddTicketInput!): RatioTicket!
  ratioTrainingCopyScheduleFrom(params: RatioTrainingCopyScheduleFromInput!): Ok!
  ratioTrainingAddDay(params: RatioTrainingAddDayInput!): Ok!
  ratioTicketFiscalize(ticket_id: ID!): Ok!
  cashierCreatePayment(params: CashierCreatePaymentInput!): Ok
  cashierRedeemPayment(id: ID!): Ok
  watchmenCreateWatchman(params: WatchmenCreateWatchmanInput!): Ok!
  watchmenUpdateShift(params: WatchmenUpdateShiftInput!): WatchmenShift!
  watchmenSetWatchmanPriority(params: WatchmenSetWatchmanPriorityInput!): Ok!
  watchmenSetWatchmanGrade(params: WatchmenSetWatchmanGradeInput!): Ok!
  zadarmaSetMemberForPbxCall(member_id: ID!, pbx_call_id: ID!): Ok
  staffGrantGooglePermissionsToMember(id: ID!): Ok
  staffFireMember(id: ID!): Ok
  authAddUserToGroup(group_id: ID!, user_id: ID!): Ok
  authRemoveUserFromGroup(group_id: ID!, user_id: ID!): Ok
}

"""An object with an ID"""
interface Node {
  """The ID of the object."""
  id: ID!
}

type Ok {
  ok: Boolean
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  cm2Customers(search: String, before: String, after: String, first: Int, last: Int): Cm2CustomerConnection!
  cm2Orders(status: String, before: String, after: String, first: Int, last: Int): Cm2OrderConnection!
  cm2Customer(id: ID!): Cm2Customer!
  cm2Order(id: ID!): Cm2Order!
  ratioTrainings(before: String, after: String, first: Int, last: Int): RatioTrainingConnection!
  ratioTrainingBySlug(slug: String!): RatioTraining!
  ratioTrainersAll: [RatioTrainer!]!
  cashierPayments(before: String, after: String, first: Int, last: Int): CashierPaymentConnection!
  watchmenWatchmenAll(current: Boolean): [WatchmenWatchman!]!
  watchmenGradesAll: [WatchmenGrade!]!
  watchmenShifts(from_date: String, to_date: String): [WatchmenShift!]!
  zadarmaPbxCalls(before: String, after: String, first: Int, last: Int): ZadarmaPbxCallConnection!
  zadarmaPbxCall(pbx_call_id: ID!): ZadarmaPbxCall!
  imageTemplatesAll: [ImageTemplate!]!
  imageTemplateBySlug(slug: String!): ImageTemplate!
  staffMembersAll: [StaffMember!]!
  staffMember(id: ID!): StaffMember!
  currentUser: AuthCurrentUser!
  authGroupsAll: [AuthGroup!]!
  authPermissionsAll: [AuthPermission!]!
}

type RatioActivity {
  id: ID!
  time: Time!
  activity_type: ActivityActivityType!
  name: String!
  location: String!
  trainer: RatioTrainer
}

input RatioAddTicketInput {
  training: ID!
  email: String!
  first_name: String!
  last_name: String
  payment_amount: Int!
  status: String!
  fiscalization_status: String!
  ticket_type: String!
  payment_type: String!
  comment: String
  clientMutationId: String
}

input RatioAddTrainingInput {
  name: String!
  slug: String!
  date: String!
}

type RatioTicket {
  id: ID!
  training: RatioTraining!
  email: String!
  first_name: String!
  last_name: String
  registration_date: Date
  status: TicketStatus!
  ticket_type: TicketTicketType!
  payment_type: TicketPaymentType!
  payment_amount: Int!
  fiscalization_status: TicketFiscalizationStatus!
  comment: String!
}

type RatioTrainer {
  id: ID!
  short_name: String!
  long_name: String!
}

type RatioTraining {
  id: ID!
  name: String!
  slug: String!
  date: Date!
  salaries_paid: Boolean!
  tickets: [RatioTicket!]!
  total_income: Int!
  tickets_count: Int!
  long_name: String!
  schedule: [RatioTrainingDay!]!
}

input RatioTrainingAddDayInput {
  training_slug: String!
  date: String!
}

type RatioTrainingConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [RatioTrainingEdge!]!
}

input RatioTrainingCopyScheduleFromInput {
  from_training_slug: String!
  to_training_slug: String!
}

type RatioTrainingDay {
  id: ID!
  date: Date!
  activities: [RatioActivity!]!
}

type RatioTrainingEdge {
  """The item at the end of the edge"""
  node: RatioTraining!

  """A cursor for use in pagination"""
  cursor: String!
}

"""An enumeration."""
enum ShiftShift {
  """MORNING_V1"""
  MORNING_V1

  """EVENING_V1"""
  EVENING_V1

  """MORNING"""
  MORNING

  """MIDDAY"""
  MIDDAY

  """EVENING"""
  EVENING

  """NIGHT"""
  NIGHT
}

type SlackUser {
  slack_id: String!
  image_url: String!
}

type StaffMember {
  id: ID!
  short_name: String!
  full_name: String!
  role: MemberRole!
  is_current: Boolean!
  vk: String!
  color: String!
  user: AuthUser!
  slack_user: SlackUser
}

"""An enumeration."""
enum TicketFiscalizationStatus {
  """todo"""
  TODO

  """not_needed"""
  NOT_NEEDED

  """in_progress"""
  IN_PROGRESS

  """fiscalized"""
  FISCALIZED
}

"""An enumeration."""
enum TicketPaymentType {
  """-"""
  NONE

  """Timepad"""
  TIMEPAD

  """Сайт"""
  WEBSITE

  """Краудфандинг"""
  CROWDFUNDING

  """Нал"""
  CASH

  """Счёт"""
  INVOICE

  """Перевод"""
  TRANSFER
}

"""An enumeration."""
enum TicketStatus {
  """Участник"""
  NORMAL

  """Отказ"""
  CANCELED
}

"""An enumeration."""
enum TicketTicketType {
  """Обычный"""
  NORMAL

  """Стипендия"""
  STIPEND

  """Стафф"""
  STAFF

  """Замена (заменяет другого участника)"""
  REPLACEMENT

  """Перенос (с прошлого мероприятия)"""
  CARRY_OVER
}

"""
The `Time` scalar type represents a Time value as
specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Time

input WatchmenCreateWatchmanInput {
  email: String!
  short_name: String!
  full_name: String!
  password: String!
  vk: String
  gender: String!
  skip_wiki: Boolean
  skip_cm_customer: Boolean
  skip_cm_user: Boolean
}

type WatchmenGrade {
  id: ID!
  code: String!
  multiplier: Float!
}

input WatchmenSetWatchmanGradeInput {
  watchman_id: ID!
  grade_id: ID!
}

input WatchmenSetWatchmanPriorityInput {
  watchman_id: ID!
  priority: Int!
}

type WatchmenShift {
  date: Date!
  shift: ShiftShift!
  watchman: WatchmenWatchman
  is_night: Boolean!
}

input WatchmenUpdateShiftInput {
  date: String!
  shift: String!
  watchman_id: ID
  is_night: Boolean
}

type WatchmenWatchman {
  id: ID!
  member: StaffMember!
  grade: WatchmenGrade
  priority: Int!
}

type ZadarmaCall {
  call_id: String!
  ts: DateTime!
  call_type: String!
  disposition: String!
  clid: String!
  destination: String!
  sip: String!
  is_recorded: Int!
  watchman: String!
  record: String!
}

type ZadarmaData {
  staff_member: StaffMember
}

type ZadarmaPbxCall implements Node {
  pbx_call_id: String!
  ts: DateTime!
  data: ZadarmaData
  calls: [ZadarmaCall!]!

  """The ID of the object."""
  id: ID!
}

type ZadarmaPbxCallConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  edges: [ZadarmaPbxCallEdge!]!
}

type ZadarmaPbxCallEdge {
  """The item at the end of the edge"""
  node: ZadarmaPbxCall!

  """A cursor for use in pagination"""
  cursor: String!
}
