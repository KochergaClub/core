fragment UserForCrm on AuthUser {
  id
  first_name
  last_name
}

fragment EvenmanLead on CommunityLead {
  id
  created
  updated
  name
  description
  status
  created_by {
    ...UserForCrm
  }
  curated_by {
    ...UserForCrm
  }
}

query EvenmanLeads(
  $before: String
  $after: String
  $first: Int
  $last: Int
  $filter: CommunityLeadsFilterInput
) {
  communityLeads(
    before: $before
    after: $after
    first: $first
    last: $last
    filter: $filter
  ) {
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      node {
        ...EvenmanLead
      }
    }
  }
}

mutation CreateEvenmanLead($input: CreateCommunityLeadInput!) {
  result: createCommunityLead(input: $input) {
    ...EvenmanLead
    ...GenericError
    ...ValidationError
  }
}

mutation UpdateEvenmanLead($input: UpdateCommunityLeadInput!) {
  result: updateCommunityLead(input: $input) {
    ...EvenmanLead
    ...GenericError
    ...ValidationError
  }
}

mutation DeleteEvenmanLead($id: ID!) {
  deleteCommunityLead(id: $id) {
    ... on BasicResult {
      ok
    }
  }
}

mutation BecomeEvenmanLeadCurator($id: ID!) {
  becomeCommunityLeadCurator(input: { id: $id }) {
    ...EvenmanLead
  }
}

mutation ClearEvenmanLeadCurator($id: ID!) {
  clearCommunityLeadCurator(input: { id: $id }) {
    ...EvenmanLead
  }
}
