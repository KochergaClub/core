fragment EventsPrototype on EventsPrototype {
  id
  title
  summary
  description
  location
  timing_description_override
  active
  weekday
  hour
  minute
  length
  tags
  vk_group {
    name
  }
  image(spec: "width-240") {
    url
  }
  project {
    meta {
      slug
    }
  }
  suggested_dates(limit: 5)
  instances {
    event_id
    start
    title
    visitors
  }
}

fragment EventsPrototype_Summary on EventsPrototype {
  id
  title
  active
  weekday
  hour
  minute
  suggested_dates(until_ts: $suggested_until_ts, limit: 10)
}

query EvenmanPrototypes($suggested_until_ts: Int!) {
  prototypes: eventsPrototypes {
    ...EventsPrototype_Summary
  }
}

query EvenmanPrototype($id: ID!) {
  prototype: eventsPrototype(id: $id) {
    ...EventsPrototype
  }
}

mutation EvenmanPrototypeUpdate(
  $id: ID!,
  $active: Boolean,
  $title: String,
  $summary: String,
  $description: String,
  $location: String,
  $timing_description_override: String,
  $vk_group_name: String
) {
  result: eventPrototypeUpdate(input: {
      id: $id,
      active: $active,
      title: $title,
      summary: $summary,
      description: $description,
      location: $location,
      timing_description_override: $timing_description_override,
      vk_group_name: $vk_group_name
    }) {
    ok
    prototype {
      ...EventsPrototype
    }
  }
}

# deprecated, use EvenmanPrototypeUpdate
mutation EvenmanPrototypeSetProject($id: ID!, $project_slug: String!) {
  result: eventPrototypeUpdate(input: {
      id: $id,
      project_slug: $project_slug
    }) {
    ok
  }
}

mutation EvenmanPrototypeCancelDate($id: ID!, $date: String!) {
  result: eventPrototypeCancelDate(input: {
      id: $id,
      date: $date
    }) {
    ok
  }
}

mutation EvenmanPrototypeNewEvent($id: ID!, $ts: Int!) {
  result: eventPrototypeNewEvent(input: {
      id: $id
      ts: $ts
    }) {
    ok
  }
}

mutation EvenmanPrototypeAddTag($id: ID!, $tag: String!) {
  result: eventPrototypeAddTag(input: {
      id: $id
      tag: $tag
    }) {
    ok
    prototype {
      ...EventsPrototype
    }
  }
}

mutation EvenmanPrototypeDeleteTag($id: ID!, $tag: String!) {
  result: eventPrototypeDeleteTag(input: {
      id: $id
      tag: $tag
    }) {
    ok
    prototype {
      ...EventsPrototype
    }
  }
}

mutation EvenmanPrototypeSetImage($id: ID!, $image_id: ID!) {
  result: eventPrototypeSetImage(input: {
      id: $id
      image_id: $image_id
    }) {
    ok
    prototype {
      ...EventsPrototype
    }
  }
}
