fragment Event_Summary on Event {
  id
  title
  summary
  image(spec: "fill-760x200|jpegquality-50") {
    id
    url
  }
  image_2x: image(spec: "fill-1520x400|jpegquality-50") {
    id
    url
  }
  start
  end
}

query UpcomingPublicEvents($today: String!) {
  publicEvents(from_date: $today, first: 20) {
    pageInfo {
      hasNextPage
    }
    nodes {
      ...Event_Summary
    }
  }
}

fragment Event_ForCalendar on Event {
  id
  title
  start
  public_tags
}

query PublicEventsForCalendar($from: String!, $to: String!) {
  publicEvents(after: $from, before: $to, first: 100) {
    nodes {
      ...Event_ForCalendar
    }
  }
}

query EventsPublicGoogleCalendar {
  eventsPublicGoogleCalendar {
    url
  }
}

fragment TeamCalendarEvent on Event {
  id
  start
  end
  title
  summary
  description
  event_type
  room
  creator
  announcements {
    vk {
      link
    }
    fb {
      link
    }
    timepad {
      link
    }
  }
}

query EventsInRange($start: String!, $end: String!) {
  events(after: $start, before: $end, first: 100) {
    nodes {
      ...TeamCalendarEvent
    }
  }
}

query TeamCalendarEvent($id: ID!) {
  event(event_id: $id) {
    ...TeamCalendarEvent
  }
}

mutation ResizeEvent($id: ID!, $start: String!, $end: String!) {
  result: eventUpdate(input: { event_id: $id, start: $start, end: $end }) {
    event {
      ...TeamCalendarEvent
    }
  }
}

mutation TeamCalendarCreateEvent(
  $start: String!
  $end: String!
  $title: String!
  $description: String!
  $room: String!
) {
  result: eventCreate(
    input: {
      title: $title
      start: $start
      end: $end
      description: $description
      location: $room
    }
  ) {
    ok
    event {
      ...TeamCalendarEvent
    }
  }
}

mutation TeamCalendarUpdateEvent(
  $id: ID!
  $title: String
  $description: String
  $location: String
) {
  result: eventUpdate(
    input: {
      event_id: $id
      title: $title
      description: $description
      location: $location
    }
  ) {
    ok
    event {
      ...TeamCalendarEvent
    }
  }
}

mutation TeamCalendarDeleteEvent($id: ID!) {
  result: eventDelete(input: { event_id: $id }) {
    ok
  }
}

fragment TeamEventFeedback on EventsFeedback {
  id
  overall_score
  recommend_score
  content_score
  conductor_score
  source_friend
  source_vk
  source_fb
  source_timepad
  source_email
  source_website
  custom_source
  comment
}

fragment TeamEventDetails on Event {
  ...TeamCalendarEvent
  feedbacks {
    ...TeamEventFeedback
  }
}

query TeamEventDetails($id: ID!) {
  event(event_id: $id) {
    ...TeamEventDetails
  }
}

mutation EventFeedbackCreate($input: EventsFeedbackCreateInput!) {
  result: eventsFeedbackCreate(input: $input) {
    ok
    feedback {
      ...TeamEventFeedback
    }
  }
}

mutation EventFeedbackDelete($id: ID!) {
  result: eventsFeedbackDelete(input: { id: $id }) {
    ok
  }
}
