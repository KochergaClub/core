fragment ExtendedCurrentUser on AuthCurrentUser {
  ...AuthCurrentUser
  first_name
  last_name
}

fragment Membership on MyCmCustomer {
  card_id
  orders_count
  subscription_until
  orders {
    start_dt
  }
}

fragment EmailSubscriptionInterest on MyEmailSubscriptionInterest {
  id
  name
  subscribed
}

fragment EmailSubscription on MyEmailSubscription {
  status
  interests {
    ...EmailSubscriptionInterest
  }
}

fragment MyTicket on MyEventsTicket {
  id
  status
  zoom_link
  event {
    id
    start
    title
  }
}

fragment MyVisitsPage on My {
  membership {
    ...Membership
  }
}

fragment MyTicketsPage on My {
  tickets(first: 100) {
    nodes {
      ...MyTicket
    }
  }
}

fragment MySettingsPage on My {
  user {
    ...ExtendedCurrentUser
  }
  email_subscription {
    ...EmailSubscription
  }
  membership {
    privacy_mode
  }
}

query MyVisitsPage {
  my {
    ...MyVisitsPage
  }
}

query MyTicketsPage {
  my {
    ...MyTicketsPage
  }
}

query MySettingsPage {
  my {
    ...MySettingsPage
  }
}

mutation MyEmailResubscribe {
  myEmailResubscribe
}

mutation MyEmailUnsubscribe {
  myEmailUnsubscribe
}

mutation MyEmailSubscribeToInterest($interest_id: ID!) {
  myEmailSubscribeToInterest(interest_id: $interest_id)
}

mutation MyEmailUnsubscribeFromInterest($interest_id: ID!) {
  myEmailUnsubscribeFromInterest(interest_id: $interest_id)
}

mutation MyPrivacyModeSet($mode: String!) {
  myPrivacyModeSet(mode: $mode)
}

mutation MyTicketDelete($event_id: ID!) {
  result: myEventsTicketUnregister(event_id: $event_id) {
    id
    created
    status
  }
}

mutation Logout {
  result: authLogout {
    ok
  }
}

mutation SetPassword($old_password: String, $new_password: String!) {
  result: setMyPassword(
    input: { old_password: $old_password, new_password: $new_password }
  ) {
    ... on SetMyPasswordOkResult {
      ok
    }
    ...GenericError
    ...ValidationError
  }
}

query MyEventPage($event_id: ID!) {
  publicEvent(event_id: $event_id) {
    id
    start
    title
    my_ticket {
      status
    }
  }
}

mutation EventGenerateOpenViduToken($event_id: ID!) {
  result: eventGenerateOpenViduToken(input: { event_id: $event_id }) {
    token
  }
}
mutation SetMyNames($input: AuthSetMyNamesInput!) {
  result: authSetMyNames(input: $input) {
    ...ExtendedCurrentUser
    ...GenericError
    ...ValidationError
  }
}
