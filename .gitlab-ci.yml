before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - docker build -f docker/Dockerfile --build-arg NPM_TOKEN=$NPM_TOKEN -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

build-chrome:
  stage: build
  script:
    - docker build -f docker/Dockerfile.chrome -t $CI_REGISTRY_IMAGE/chrome:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE/chrome:$CI_COMMIT_REF_NAME

test-lint:
  stage: test
  script:
    - docker run $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME make lint

test-python:
  stage: test
  script:
    - docker-compose -f docker/compose.dev.yml run api poetry run pytest


deploy-stack:
  stage: deploy
  variables:
    DOCKER_HOST: tcp://$DEPLOY_HOST:2376
    DOCKER_TLS_VERIFY: 1
    TAG: $CI_COMMIT_REF_NAME
    HOST_IP: $DEPLOY_HOST
  script:
    # prepare docker
    - mkdir -p ~/.docker
    - echo "$DOCKER_CACERT" > ~/.docker/ca.pem
    - echo "$DOCKER_CERT" > ~/.docker/cert.pem
    - echo "$DOCKER_KEY" > ~/.docker/key.pem
    # one more login, since we changed the docker endpoint
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    # migrate and collect static
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker pull $CI_REGISTRY_IMAGE/chrome:$CI_COMMIT_REF_NAME
    - docker-compose -f docker/compose.prod.yml run --rm api ./scripts/upgrade.sh
    # deploy
    - docker-compose -f docker/compose.prod.yml up -d
  only:
    - master
