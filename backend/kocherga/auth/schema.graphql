extend type Query {
  currentUser: AuthCurrentUser!
  authGroupsAll: [AuthGroup!]! @auth(permission: "auth.audit")
  authPermissionsAll: [AuthPermission!]! @auth(permission: "auth.audit")
}

type AuthCurrentUser {
  is_authenticated: Boolean!
  email: String
  is_staff: Boolean
  permissions: [String!]!
}

type AuthGroup {
  id: ID!
  name: String!
  permissions: [AuthPermission!]!
  users: [AuthUser!]!
}

type AuthPermission {
  id: ID!
  name: String!
  users: [AuthUser!]!
}

type AuthUser {
  id: ID!
  email: String!
  staff_member: StaffMember
}

extend type Mutation {
  authAddUserToGroup(group_id: ID!, user_id: ID!): Boolean @auth(permission: "auth.audit")
  authRemoveUserFromGroup(group_id: ID!, user_id: ID!): Boolean @auth(permission: "auth.audit")
}
