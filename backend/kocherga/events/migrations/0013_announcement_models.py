# Generated by Django 2.2 on 2019-05-31 20:55

from django.db import migrations, models
import django.db.models.deletion


def fill_announcements(apps, schema_editor):
    Event = apps.get_model('events', 'Event')

    VkAnnouncement = apps.get_model('events', 'VkAnnouncement')
    FbAnnouncement = apps.get_model('events', 'FbAnnouncement')
    TimepadAnnouncement = apps.get_model('events', 'TimepadAnnouncement')

    for event in Event.objects.all():
        # vk
        if event.vk_group or event.posted_vk or event.vk_image:
            vk_announcement = VkAnnouncement.objects.create(
                event=event,
                link=event.posted_vk,
                group=event.vk_group,
                image=event.vk_image or '',
            )
            vk_announcement.save()

        # fb
        if event.fb_group or event.posted_fb:
            fb_announcement = FbAnnouncement.objects.create(
                event=event, link=event.posted_fb, group=event.fb_group,
            )
            fb_announcement.save()

        # timepad
        if (
            event.posted_timepad
            or event.timepad_category_code
            or event.timepad_prepaid_tickets
        ):
            timepad_announcement = TimepadAnnouncement.objects.create(
                event=event,
                link=event.posted_timepad,
                category_code=event.timepad_category_code,
                prepaid_tickets=event.timepad_prepaid_tickets,
            )
            timepad_announcement.save()


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0012_auto_20190514_0158'),
    ]

    operations = [
        migrations.CreateModel(
            name='VkAnnouncement',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('link', models.CharField(blank=True, max_length=1024)),
                ('group', models.CharField(blank=True, max_length=40)),
                ('image', models.CharField(blank=True, max_length=32)),
                (
                    'event',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='vk_announcement',
                        to='events.Event',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='TimepadAnnouncement',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('link', models.CharField(blank=True, max_length=1024)),
                ('category_code', models.CharField(blank=True, max_length=40)),
                ('prepaid_tickets', models.BooleanField(default=False)),
                (
                    'event',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='timepad_announcement',
                        to='events.Event',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='FbAnnouncement',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('link', models.CharField(blank=True, max_length=1024)),
                ('group', models.CharField(blank=True, max_length=40)),
                (
                    'event',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='fb_announcement',
                        to='events.Event',
                    ),
                ),
            ],
        ),
        migrations.RunPython(fill_announcements),
    ]
